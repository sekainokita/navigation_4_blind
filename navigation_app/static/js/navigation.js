document.addEventListener('DOMContentLoaded', function() {
    // DOM ÏöîÏÜå
    const statusElement = document.getElementById('status');
    const destinationInput = document.getElementById('destination');
    const searchButton = document.getElementById('search');
    const startNavigationButton = document.getElementById('start-navigation');
    const stopNavigationButton = document.getElementById('stop-navigation');
    const destinationForm = document.getElementById('destination-form');
    const navigationInfo = document.getElementById('navigation-info');
    const distanceElement = document.getElementById('distance');
    const timeElement = document.getElementById('time');
    const nextDirectionElement = document.getElementById('next-direction');
    const searchResultsDiv = document.getElementById('search-results');
    const voiceInputButton = document.getElementById('voice-input');
    const navigationPanel = document.getElementById('navigation-panel');

    // ÎÇ¥ ÏúÑÏπò Î≤ÑÌäº ÏÉùÏÑ±
    const myLocationButton = document.createElement('button');
    myLocationButton.id = 'my-location';
    myLocationButton.innerHTML = '<i class="fas fa-location-arrow"></i>';
    myLocationButton.title = 'ÎÇ¥ ÏúÑÏπò';
    myLocationButton.style.position = 'absolute';
    myLocationButton.style.top = '70px';
    myLocationButton.style.right = '10px';
    myLocationButton.style.zIndex = '1000';
    myLocationButton.style.width = '40px';
    myLocationButton.style.height = '40px';
    myLocationButton.style.borderRadius = '50%';
    myLocationButton.style.backgroundColor = 'white';
    myLocationButton.style.border = 'none';
    myLocationButton.style.boxShadow = '0 2px 5px rgba(0,0,0,0.3)';
    myLocationButton.style.cursor = 'pointer';
    myLocationButton.style.display = 'flex';
    myLocationButton.style.justifyContent = 'center';
    myLocationButton.style.alignItems = 'center';
    document.body.appendChild(myLocationButton);

     // Ìå®ÎÑê ÌÜ†Í∏Ä Î≤ÑÌäº ÏÉùÏÑ±
    const panelToggleButton = document.createElement('button');
    panelToggleButton.id = 'panel-toggle';
    panelToggleButton.innerHTML = '<i class="fas fa-chevron-down"></i>';
    panelToggleButton.title = 'Ìå®ÎÑê Ï†ëÍ∏∞/ÌéºÏπòÍ∏∞';
    panelToggleButton.style.position = 'fixed'; // absoluteÏóêÏÑú fixedÎ°ú Î≥ÄÍ≤Ω
    panelToggleButton.style.top = '70px'; // ÏúÑÏπò Ï°∞Ï†ï (ÎÇ¥ ÏúÑÏπò Î≤ÑÌäºÍ≥º Í≤πÏπòÏßÄ ÏïäÎèÑÎ°ù)
    panelToggleButton.style.left = '15px'; // ÏôºÏ™ΩÏúºÎ°ú Ïù¥Îèô
    panelToggleButton.style.transform = 'none'; // Ï§ëÏïô Ï†ïÎ†¨ Ìï¥Ï†ú
    panelToggleButton.style.zIndex = '1002'; // Îçî ÎÜíÏùÄ z-index
    panelToggleButton.style.width = '40px';
    panelToggleButton.style.height = '40px';
    panelToggleButton.style.borderRadius = '50%';
    panelToggleButton.style.backgroundColor = 'white';
    panelToggleButton.style.border = 'none';
    panelToggleButton.style.boxShadow = '0 2px 5px rgba(0,0,0,0.3)';
    panelToggleButton.style.cursor = 'pointer';
    panelToggleButton.style.display = 'flex';
    panelToggleButton.style.justifyContent = 'center';
    panelToggleButton.style.alignItems = 'center';

    // Ìå®ÎÑêÏóê ÌÜ†Í∏Ä Î≤ÑÌäº Ï∂îÍ∞ÄÌïòÏßÄ ÏïäÍ≥† bodyÏóê ÏßÅÏ†ë Ï∂îÍ∞Ä
    document.body.appendChild(panelToggleButton);

    // ÎÇ¥ ÏúÑÏπò Î≤ÑÌäº ÏúÑÏπò Ï°∞Ï†ïÎèÑ Ìï®Íªò ÏàòÏ†ï
    myLocationButton.style.top = '15px'; // Îçî ÏÉÅÎã®ÏúºÎ°ú Ïù¥Îèô
    myLocationButton.style.right = '15px';
    myLocationButton.style.zIndex = '1002'; // z-index ÏÉÅÌñ•

    // Í∏ÄÎ°úÎ≤å Î≥ÄÏàò Ï∂îÍ∞Ä
    let sessionId = null;
    let lastVoiceGuidance = '';
    let speechSynthesis = window.speechSynthesis;
    let compassHeading = null;
    let voiceEnabled = true;
    let isLocationManuallySet = false;
    let recognition = null;
    let isListening = false;
    let conversationState = 'idle'; // ÎåÄÌôî ÏÉÅÌÉú: idle, asking_destination, confirming_destination
    let isMapCenteredOnUser = true; // ÏßÄÎèÑÍ∞Ä ÏÇ¨Ïö©Ïûê ÏúÑÏπòÎ•º Ï§ëÏã¨ÏúºÎ°ú ÌïòÎäîÏßÄ

    // ÏùåÏÑ± Ïù∏Ïãù Ï¥àÍ∏∞Ìôî
    function initSpeechRecognition() {
        if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {
            // Speech Recognition API ÏßÄÏõê ÌôïÏù∏
            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
            recognition = new SpeechRecognition();
            recognition.lang = 'ko-KR';
            recognition.continuous = false;
            recognition.interimResults = false;

            // ÏùåÏÑ± Ïù∏Ïãù Í≤∞Í≥º Ïù¥Î≤§Ìä∏
            recognition.onresult = function(event) {
                const transcript = event.results[0][0].transcript;
                console.log('ÏùåÏÑ± Ïù∏Ïãù Í≤∞Í≥º:', transcript);
                
                // ÎåÄÌôî ÏÉÅÌÉúÏóê Îî∞Î•∏ Ï≤òÎ¶¨
                handleVoiceInput(transcript);
            };

            recognition.onerror = function(event) {
                console.error('ÏùåÏÑ± Ïù∏Ïãù Ïò§Î•ò:', event.error);
                if (event.error === 'no-speech') {
                    speakText("ÏùåÏÑ±Ïù¥ Í∞êÏßÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.");
                } else {
                    speakText("ÏùåÏÑ± Ïù∏Ïãù Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.");
                }
                stopListening();
            };

            recognition.onend = function() {
                isListening = false;
                voiceInputButton.textContent = 'üé§ ÏùåÏÑ±ÏúºÎ°ú Î™©Ï†ÅÏßÄ ÏûÖÎ†•';
                voiceInputButton.classList.remove('listening');
            };

            return true;
        } else {
            console.error('Ïù¥ Î∏åÎùºÏö∞Ï†ÄÎäî ÏùåÏÑ± Ïù∏ÏãùÏùÑ ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.');
            return false;
        }
    }

    // ÏùåÏÑ± Ïù∏Ïãù ÏãúÏûë
    function startListening() {
        if (recognition && !isListening) {
            try {
                recognition.start();
                isListening = true;
                voiceInputButton.textContent = 'üî¥ Îì£Îäî Ï§ë...';
                voiceInputButton.classList.add('listening');
                return true;
            } catch (e) {
                console.error('ÏùåÏÑ± Ïù∏Ïãù ÏãúÏûë Ïò§Î•ò:', e);
                return false;
            }
        }
        return false;
    }

    // ÏùåÏÑ± Ïù∏Ïãù Ï§ëÏßÄ
    function stopListening() {
        if (recognition && isListening) {
            recognition.stop();
            isListening = false;
            voiceInputButton.textContent = 'üé§ ÏùåÏÑ±ÏúºÎ°ú Î™©Ï†ÅÏßÄ ÏûÖÎ†•';
            voiceInputButton.classList.remove('listening');
        }
    }

    // ÏùåÏÑ± ÏûÖÎ†• Ï≤òÎ¶¨
    function handleVoiceInput(transcript) {
        switch (conversationState) {
            case 'idle':
                // Ï¥àÍ∏∞ ÏÉÅÌÉúÏù∏ Í≤ΩÏö∞ Ï≤òÎ¶¨ÌïòÏßÄ ÏïäÏùå
                break;
                
            case 'asking_destination':
                // Î™©Ï†ÅÏßÄ ÏßàÎ¨∏Ïóê ÎåÄÌïú ÏùëÎãµ Ï≤òÎ¶¨
                destinationInput.value = transcript;
                speakText(`Î™©Ï†ÅÏßÄÎ•º ${transcript}Î°ú ÏÑ§Ï†ïÌï†ÍπåÏöî? ÎÑ§ ÎòêÎäî ÏïÑÎãàÏò§Î°ú ÎåÄÎãµÌï¥Ï£ºÏÑ∏Ïöî.`);
                conversationState = 'confirming_destination';
                setTimeout(() => {
                    startListening();
                }, 3000); // TTS Ïû¨ÏÉù ÌõÑ ÏÇ¨Ïö©Ïûê ÏùëÎãµ Îì£Í∏∞
                break;
                
            case 'confirming_destination':
                // Î™©Ï†ÅÏßÄ ÌôïÏù∏Ïóê ÎåÄÌïú ÏùëÎãµ Ï≤òÎ¶¨
                const response = transcript.toLowerCase();
                if (response.includes('ÎÑ§') || response.includes('Ïòà') || response.includes('Ïùë') || response.includes('Ï¢ãÏïÑ')) {
                    speakText("Î™©Ï†ÅÏßÄÎ•º Í≤ÄÏÉâÌï©ÎãàÎã§.");
                    conversationState = 'idle';
                    searchButton.click(); // Í≤ÄÏÉâ Ïã§Ìñâ
                } else if (response.includes('ÏïÑÎãà') || response.includes('ÏïÑÎãàÏò§') || response.includes('ÏïÑÎÉê')) {
                    speakText("Î™©Ï†ÅÏßÄÎ•º Îã§Ïãú ÎßêÏîÄÌï¥Ï£ºÏÑ∏Ïöî.");
                    conversationState = 'asking_destination';
                    destinationInput.value = '';
                    setTimeout(() => {
                        startListening();
                    }, 2000);
                } else {
                    speakText("ÎÑ§ ÎòêÎäî ÏïÑÎãàÏò§Î°ú ÎåÄÎãµÌï¥Ï£ºÏÑ∏Ïöî. Î™©Ï†ÅÏßÄÎ•º ÏÑ§Ï†ïÌï†ÍπåÏöî?");
                    setTimeout(() => {
                        startListening();
                    }, 2500);
                }
                break;
        }
    }

    // ÏùåÏÑ± ÏûÖÎ†• Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
    if (voiceInputButton) {
        voiceInputButton.addEventListener('click', function() {
            if (isListening) {
                stopListening();
                return;
            }
            
            if (!initSpeechRecognition()) {
                speakText("Ï£ÑÏÜ°Ìï©ÎãàÎã§. Ïù¥ Î∏åÎùºÏö∞Ï†ÄÏóêÏÑúÎäî ÏùåÏÑ± Ïù∏ÏãùÏù¥ ÏßÄÏõêÎêòÏßÄ ÏïäÏäµÎãàÎã§.");
                return;
            }
            
            // ÎåÄÌôî ÏãúÏûë
            speakText("Î™©Ï†ÅÏßÄÎ•º ÎßêÏîÄÌï¥Ï£ºÏÑ∏Ïöî.");
            conversationState = 'asking_destination';
            
            // TTS Ïû¨ÏÉù ÌõÑ ÏùåÏÑ± Ïù∏Ïãù ÏãúÏûë
            setTimeout(() => {
                startListening();
            }, 1500);
        });
    }

    // ÏßÄÎèÑ Ï¥àÍ∏∞Ìôî
    const map = L.map('map').setView([37.5665, 126.9780], 15);  // ÏÑúÏö∏ ÏãúÏ≤≠ Í∏∞Ï§Ä
    
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // ÎßàÏª§ Î∞è Í≤ΩÎ°ú Î†àÏù¥Ïñ¥
    let currentPositionMarker = null;
    let destinationMarker = null;
    let routeLayer = null;
    let routeCoordinates = [];
    let watchId = null;
    let isNavigating = false;
    let socket = null;

    // ÌòÑÏû¨ ÏúÑÏπò ÎßàÏª§ Ïä§ÌÉÄÏùº
    const currentPositionIcon = L.divIcon({
        className: 'current-position-icon',
        html: '<div style="background-color: #4285F4; border-radius: 50%; width: 15px; height: 15px; border: 3px solid white;"></div>',
        iconSize: [15, 15],
        iconAnchor: [7.5, 7.5]
    });

    // Î™©Ï†ÅÏßÄ ÎßàÏª§ Ïä§ÌÉÄÏùº
    const destinationIcon = L.icon({
        iconUrl: 'https://unpkg.com/leaflet@1.9.3/dist/images/marker-icon-2x-red.png',
        shadowUrl: 'https://unpkg.com/leaflet@1.9.3/dist/images/marker-shadow.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41]
    });

    // ÏúÑÏπò Ï†ïÌôïÎèÑ ÌëúÏãú UI Ï∂îÍ∞Ä
    const accuracyInfoDiv = document.createElement('div');
    accuracyInfoDiv.id = 'accuracy-info';
    accuracyInfoDiv.style.position = 'absolute';
    accuracyInfoDiv.style.bottom = '10px';
    accuracyInfoDiv.style.left = '10px';
    accuracyInfoDiv.style.backgroundColor = 'rgba(255,255,255,0.8)';
    accuracyInfoDiv.style.padding = '5px';
    accuracyInfoDiv.style.borderRadius = '5px';
    accuracyInfoDiv.style.zIndex = '1000';
    accuracyInfoDiv.style.fontSize = '12px';
    accuracyInfoDiv.textContent = 'ÏúÑÏπò Ï†ïÌôïÎèÑ: ÌôïÏù∏ Ï§ë...';
    document.body.appendChild(accuracyInfoDiv);

    // ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ï Î≤ÑÌäº Ï∂îÍ∞Ä
    const setLocationButton = document.createElement('button');
    setLocationButton.id = 'set-location';
    setLocationButton.textContent = 'ÌòÑÏû¨ ÏúÑÏπò ÏàòÎèô ÏÑ§Ï†ï';
    setLocationButton.style.position = 'absolute';
    setLocationButton.style.bottom = '40px';
    setLocationButton.style.left = '10px';
    setLocationButton.style.zIndex = '1000';
    setLocationButton.style.padding = '8px';
    setLocationButton.style.backgroundColor = '#ff7043';
    setLocationButton.style.color = 'white';
    setLocationButton.style.border = 'none';
    setLocationButton.style.borderRadius = '4px';
    setLocationButton.style.display = 'none'; // Ï¥àÍ∏∞ÏóêÎäî Ïà®ÍπÄ
    document.body.appendChild(setLocationButton);

    // Ìå®ÎÑê ÌÜ†Í∏Ä Î≤ÑÌäº Ïù¥Î≤§Ìä∏
    let isPanelCollapsed = false;
    panelToggleButton.addEventListener('click', function() {
        console.log("Ìå®ÎÑê ÌÜ†Í∏Ä Î≤ÑÌäº ÌÅ¥Î¶≠Îê®");
        
        if (isPanelCollapsed) {
            // Ìå®ÎÑê ÌôïÏû•
            navigationPanel.style.height = '';
            navigationPanel.style.overflow = '';
            this.innerHTML = '<i class="fas fa-chevron-down"></i>';
            isPanelCollapsed = false;
            speakText("Ìå®ÎÑêÏù¥ ÌôïÏû•ÎêòÏóàÏäµÎãàÎã§.");
        } else {
            // Ìå®ÎÑê Ï†ëÍ∏∞
            navigationPanel.style.height = '30px';
            navigationPanel.style.overflow = 'hidden';
            this.innerHTML = '<i class="fas fa-chevron-up"></i>';
            isPanelCollapsed = true;
            speakText("Ìå®ÎÑêÏù¥ ÏµúÏÜåÌôîÎêòÏóàÏäµÎãàÎã§.");
        }
    });

    // ÎÇ¥ ÏúÑÏπò Î≤ÑÌäº Ïù¥Î≤§Ìä∏
    myLocationButton.addEventListener('click', function() {
        console.log("ÎÇ¥ ÏúÑÏπò Î≤ÑÌäº ÌÅ¥Î¶≠Îê®");
        
        if (currentPositionMarker) {
            map.setView(currentPositionMarker.getLatLng(), 17);
            isMapCenteredOnUser = true;
            speakText("ÌòÑÏû¨ ÏúÑÏπòÎ°ú Ïù¥ÎèôÌñàÏäµÎãàÎã§.");
        } else {
            updateCurrentPosition().then(() => {
                if (currentPositionMarker) {
                    map.setView(currentPositionMarker.getLatLng(), 17);
                    isMapCenteredOnUser = true;
                    speakText("ÌòÑÏû¨ ÏúÑÏπòÎ°ú Ïù¥ÎèôÌñàÏäµÎãàÎã§.");
                }
            }).catch(error => {
                speakText("ÌòÑÏû¨ ÏúÑÏπòÎ•º ÌôïÏù∏Ìï† Ïàò ÏóÜÏäµÎãàÎã§.");
            });
        }
    });

    // ÏßÄÎèÑ Ïù¥Îèô Í∞êÏßÄÌïòÏó¨ Ï§ëÏã¨ Î™®Îìú Ìï¥Ï†ú
    map.on('dragstart', function() {
        isMapCenteredOnUser = false;
    });

    // ÏùåÏÑ± ÏïàÎÇ¥ Ìï®Ïàò Í∞úÏÑ†
    function speakText(text) {
        if (!text) return;
        
        // Ïù¥Ï†Ñ ÏùåÏÑ± Ï∑®ÏÜå
        speechSynthesis.cancel();
        
        // ÏÉà ÏùåÏÑ± ÏïàÎÇ¥ ÏÉùÏÑ±
        const utterance = new SpeechSynthesisUtterance(text);
        utterance.lang = 'ko-KR';  // ÌïúÍµ≠Ïñ¥
        utterance.volume = 1.0;    // ÏµúÎåÄ Î≥ºÎ•®
        utterance.rate = 1.0;      // Ï†ïÏÉÅ ÏÜçÎèÑ
        utterance.pitch = 1.0;     // Ï†ïÏÉÅ ÏùåÎÜíÏù¥
        
        // ÏùåÏÑ± Ïû¨ÏÉù
        speechSynthesis.speak(utterance);
        lastVoiceGuidance = text;
        
        // ÎîîÎ≤ÑÍπÖ
        console.log('TTS:', text);
    }

    // ÎÇòÏπ®Î∞ò Ï¥àÍ∏∞Ìôî Ìï®Ïàò Ï∂îÍ∞Ä
    function initializeCompass() {
        if (window.DeviceOrientationEvent) {
            // iOS 13+ ÏöîÍµ¨ÏÇ¨Ìï≠
            if (typeof DeviceOrientationEvent.requestPermission === 'function') {
                document.getElementById('enable-compass').style.display = 'block';
                document.getElementById('enable-compass').addEventListener('click', function() {
                    DeviceOrientationEvent.requestPermission()
                        .then(permissionState => {
                            if (permissionState === 'granted') {
                                window.addEventListener('deviceorientation', handleOrientation);
                                this.style.display = 'none';
                            }
                        })
                        .catch(console.error);
                });
            } else {
                // Í∏∞ÌÉÄ Í∏∞Í∏∞
                window.addEventListener('deviceorientation', handleOrientation);
            }
        }
    }

    // Î∞©Ìñ• Ï≤òÎ¶¨ Ìï®Ïàò
    function handleOrientation(event) {
        // iOSÏôÄ ÏïàÎìúÎ°úÏù¥ÎìúÏóêÏÑú Î∞©ÏúÑÍ∞Å Í∞íÏù¥ Îã§Î•¥Í≤å Ï†úÍ≥µÎê®
        if (event.webkitCompassHeading) {
            // iOS
            compassHeading = event.webkitCompassHeading;
        } else if (event.alpha) {
            // ÏïàÎìúÎ°úÏù¥Îìú
            compassHeading = 360 - event.alpha;
        }
        
        // ÎÇòÏπ®Î∞ò ÌôîÏÇ¥Ìëú ÏóÖÎç∞Ïù¥Ìä∏
        updateDirectionArrow();
    }

    // Î∞©Ìñ• ÌôîÏÇ¥Ìëú ÏóÖÎç∞Ïù¥Ìä∏
    function updateDirectionArrow() {
        const arrow = document.getElementById('direction-arrow');
        if (arrow && compassHeading !== null) {
            arrow.style.transform = `rotate(${compassHeading}deg)`;
        }
    }

    // ÏõπÏÜåÏºì Ïó∞Í≤∞ ÏÑ§Ï†ï
    function setupWebSocket() {
        // ÌòÑÏû¨ Ìò∏Ïä§Ìä∏ Í∏∞Î∞òÏúºÎ°ú ÏõπÏÜåÏºì URL Íµ¨ÏÑ±
        const wsProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
        const wsUrl = `${wsProtocol}//${window.location.host}/ws`;
        
        socket = new WebSocket(wsUrl);
        
        socket.onopen = function(e) {
            console.log("ÏõπÏÜåÏºì Ïó∞Í≤∞ ÏÑ§Ï†ï");
            speakText("ÏÑúÎ≤ÑÏóê Ïó∞Í≤∞ÎêòÏóàÏäµÎãàÎã§.");
        };
        
        socket.onmessage = function(event) {
            const data = JSON.parse(event.data);
            console.log("ÏÑúÎ≤ÑÎ°úÎ∂ÄÌÑ∞ Îç∞Ïù¥ÌÑ∞ ÏàòÏã†:", data);
            
            // ÏÑúÎ≤ÑÎ°úÎ∂ÄÌÑ∞ Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞ Ï≤òÎ¶¨
            if (data.status) {
                statusElement.textContent = data.status;
            }
            
            // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏
            if (data.next_direction) {
                nextDirectionElement.textContent = data.next_direction;
            }
            
            if (data.remaining_distance) {
                distanceElement.textContent = `${data.remaining_distance}m`;
            }
            
            // ÏùåÏÑ± ÏïàÎÇ¥ Ï≤òÎ¶¨
            if (data.voice_guidance && data.voice_guidance !== '') {
                speakText(data.voice_guidance);
            }
            
            // Í≤ΩÎ°ú Ïù¥ÌÉà Í≤ΩÍ≥† Ï≤òÎ¶¨
            if (data.off_route) {
                // Í≤ΩÎ°ú Ïù¥ÌÉà Ïãú Î≤ÑÌäº ÌëúÏãú
                setLocationButton.style.display = 'block';
                speakText("Í≤ΩÎ°úÎ•º Ïù¥ÌÉàÌñàÏäµÎãàÎã§. ÌòÑÏû¨ ÏúÑÏπòÎ•º ÏàòÎèôÏúºÎ°ú ÏÑ§Ï†ïÌïòÍ±∞ÎÇò Ï†úÏûêÎ¶¨ÏóêÏÑú Ïû†Ïãú Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî.");
            } else {
                // Í≤ΩÎ°ú ÎÇ¥Ïóê ÏûàÏùÑ ÎïåÎäî Ïà®ÍπÄ 
                if (!isLocationManuallySet) {
                    setLocationButton.style.display = 'none';
                }
            }
        };
        
        socket.onclose = function(event) {
            console.log("ÏõπÏÜåÏºì Ïó∞Í≤∞ Ï¢ÖÎ£å");
            speakText("ÏÑúÎ≤ÑÏôÄÏùò Ïó∞Í≤∞Ïù¥ ÎÅäÏñ¥Ï°åÏäµÎãàÎã§. Îã§Ïãú Ïó∞Í≤∞ÏùÑ ÏãúÎèÑÌï©ÎãàÎã§.");
            // ÏûêÎèô Ïû¨Ïó∞Í≤∞ ÏãúÎèÑ
            setTimeout(setupWebSocket, 1000);
        };
        
        socket.onerror = function(error) {
            console.log("ÏõπÏÜåÏºì Ïò§Î•ò:", error);
            speakText("ÏÑúÎ≤Ñ Ïó∞Í≤∞ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.");
        };
    }

    // ÏúÑÏπò Í∂åÌïú ÏöîÏ≤≠ Ìï®Ïàò
    function requestLocationPermission() {
        return new Promise((resolve, reject) => {
            if (navigator.permissions && navigator.permissions.query) {
                navigator.permissions.query({ name: 'geolocation' })
                    .then(permissionStatus => {
                        console.log("ÏúÑÏπò Í∂åÌïú ÏÉÅÌÉú:", permissionStatus.state);
                        
                        if (permissionStatus.state === 'granted') {
                            resolve();
                        } else if (permissionStatus.state === 'prompt') {
                            speakText("ÏúÑÏπò Ï†ïÎ≥¥ Ï†ëÍ∑º Í∂åÌïúÏù¥ ÌïÑÏöîÌï©ÎãàÎã§. Í∂åÌïú ÏöîÏ≤≠ Ïãú 'ÌóàÏö©'ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
                            navigator.geolocation.getCurrentPosition(
                                () => resolve(),
                                (error) => reject(error)
                            );
                        } else {
                            speakText("ÏúÑÏπò Ï†ïÎ≥¥ Ï†ëÍ∑ºÏù¥ Ï∞®Îã®ÎêòÏóàÏäµÎãàÎã§. Î∏åÎùºÏö∞Ï†Ä ÏÑ§Ï†ïÏóêÏÑú ÏúÑÏπò Í∂åÌïúÏùÑ ÌóàÏö©Ìï¥Ï£ºÏÑ∏Ïöî.");
                            reject(new Error("ÏúÑÏπò Í∂åÌïúÏù¥ Ï∞®Îã®ÎêòÏóàÏäµÎãàÎã§."));
                        }
                    });
            } else {
                // Í∂åÌïú API ÎØ∏ÏßÄÏõê Î∏åÎùºÏö∞Ï†Ä
                navigator.geolocation.getCurrentPosition(
                    () => resolve(),
                    (error) => reject(error)
                );
            }
        });
    }

    // ÌòÑÏû¨ ÏúÑÏπò Í∞ÄÏ†∏Ïò§Í∏∞
    function getCurrentPosition() {
        return new Promise((resolve, reject) => {
            if (navigator.geolocation) {
                // ÏúÑÏπò ÏöîÏ≤≠ ÏãúÏûë
                navigator.geolocation.getCurrentPosition(
                    position => {
                        console.log("ÏúÑÏπò Ï†ïÎ≥¥ ÌöçÎìù ÏÑ±Í≥µ:", position.coords);
                        resolve(position);
                    }, 
                    error => {
                        console.error("ÏúÑÏπò Ï†ïÎ≥¥ ÌöçÎìù Ïã§Ìå®:", error);
                        reject(error);
                    }, 
                    {
                        enableHighAccuracy: true,
                        timeout: 15000,
                        maximumAge: 0
                    }
                );
            } else {
                reject(new Error('Ïù¥ Î∏åÎùºÏö∞Ï†ÄÎäî ÏúÑÏπò Ï†ïÎ≥¥Î•º ÏßÄÏõêÌïòÏßÄ ÏïäÏäµÎãàÎã§.'));
            }
        });
    }

    // ÌòÑÏû¨ ÏúÑÏπò ÏóÖÎç∞Ïù¥Ìä∏ Î∞è ÌëúÏãú
    async function updateCurrentPosition() {
        try {
            console.log("ÌòÑÏû¨ ÏúÑÏπò ÏóÖÎç∞Ïù¥Ìä∏ ÏãúÏûë...");
            const position = await getCurrentPosition();
            const { latitude, longitude, accuracy } = position.coords;
            
            console.log(`ÏúÑÏπò Ï†ïÎ≥¥ ÏóÖÎç∞Ïù¥Ìä∏ - ÏúÑÎèÑ: ${latitude}, Í≤ΩÎèÑ: ${longitude}, Ï†ïÌôïÎèÑ: ${accuracy}m`);
            
            // Ï†ïÌôïÎèÑ Ï†ïÎ≥¥ ÌëúÏãú
            accuracyInfoDiv.textContent = `ÏúÑÏπò Ï†ïÌôïÎèÑ: ${Math.round(accuracy)}m`;
            accuracyInfoDiv.style.display = 'block';
            
            // Ï†ïÌôïÎèÑÍ∞Ä ÎÑàÎ¨¥ ÎÇÆÏùÄ Í≤ΩÏö∞ Í≤ΩÍ≥†
            if (accuracy > 100) {
                statusElement.innerHTML = `ÏúÑÏπò Ï†ïÌôïÎèÑÍ∞Ä ÎÇÆÏäµÎãàÎã§(${Math.round(accuracy)}m). ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ïÏùÑ ÏÇ¨Ïö©Ìï¥Î≥¥ÏÑ∏Ïöî.`;
                setLocationButton.style.display = 'block';
                speakText(`ÏúÑÏπò Ï†ïÌôïÎèÑÍ∞Ä ÎÇÆÏäµÎãàÎã§. Ïã§Ïô∏Î°ú Ïù¥ÎèôÌïòÍ±∞ÎÇò ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ïÏùÑ ÏÇ¨Ïö©Ìï¥Î≥¥ÏÑ∏Ïöî.`);
            } else {
                if (!isLocationManuallySet) {
                    setLocationButton.style.display = 'none';
                }
                statusElement.innerHTML = 'ÌòÑÏû¨ ÏúÑÏπòÎ•º ÌôïÏù∏ÌñàÏäµÎãàÎã§.';
                speakText("ÌòÑÏû¨ ÏúÑÏπòÎ•º ÌôïÏù∏ÌñàÏäµÎãàÎã§. Î™©Ï†ÅÏßÄÎ•º ÏÑ§Ï†ïÌïòÏÑ∏Ïöî.");
            }
            
            // ÌòÑÏû¨ ÏúÑÏπò ÎßàÏª§ ÏóÖÎç∞Ïù¥Ìä∏
            if (!currentPositionMarker) {
                currentPositionMarker = L.marker([latitude, longitude], { icon: currentPositionIcon }).addTo(map);
                map.setView([latitude, longitude], 17);
            } else {
                currentPositionMarker.setLatLng([latitude, longitude]);
                // ÏßÄÎèÑ Ï§ëÏã¨ Ïù¥Îèô (ÏÇ¨Ïö©Ïûê Ï§ëÏã¨ Î™®ÎìúÏùº ÎïåÎßå)
                if (isMapCenteredOnUser) {
                    map.panTo([latitude, longitude]);
                }
            }
            
            // ÏõπÏÜåÏºìÏù¥ Ïó¥Î†§ ÏûàÍ≥† ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Ï§ëÏù¥ÎùºÎ©¥ ÏÑúÎ≤ÑÏóê ÏúÑÏπò ÏóÖÎç∞Ïù¥Ìä∏ Ï†ÑÏÜ°
            if (socket && socket.readyState === WebSocket.OPEN && isNavigating) {
                socket.send(JSON.stringify({
                    latitude: latitude,
                    longitude: longitude,
                    accuracy: accuracy,
                    session_id: sessionId
                }));
            }
            
            return { latitude, longitude, accuracy };
        } catch (error) {
            console.error('ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§:', error);
            statusElement.innerHTML = 'ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§. ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ïÏùÑ ÏÇ¨Ïö©Ìï¥Î≥¥ÏÑ∏Ïöî.';
            setLocationButton.style.display = 'block';
            speakText("ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§. ÏúÑÏπò Í∂åÌïúÏùÑ ÌóàÏö©ÌïòÍ≥† Îã§Ïãú ÏãúÎèÑÌïòÍ±∞ÎÇò, ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ïÏùÑ ÏÇ¨Ïö©Ìï¥Î≥¥ÏÑ∏Ïöî.");
            throw error;
        }
    }

    // ÏúÑÏπò Ïã§ÏãúÍ∞Ñ Ï∂îÏ†Å ÏãúÏûë - Í∞úÏÑ†Îêú Î≤ÑÏ†Ñ
    function startTracking() {
        if (watchId) {
            console.log("Ïù¥ÎØ∏ ÏúÑÏπò Ï∂îÏ†Å Ï§ëÏûÖÎãàÎã§");
            return;
        }
        
        console.log("ÏúÑÏπò Ï∂îÏ†Å ÏãúÏûë...");
        statusElement.innerHTML = "GPS ÏúÑÏπòÎ•º Ï∂îÏ†Å Ï§ëÏûÖÎãàÎã§...";
        speakText("GPS ÏúÑÏπò Ï∂îÏ†ÅÏùÑ ÏãúÏûëÌï©ÎãàÎã§.");
        
        // ÏúÑÏπò Ï†ïÌôïÎèÑ ÌëúÏãú ÌôúÏÑ±Ìôî
        accuracyInfoDiv.style.display = 'block';
        
        // ÏúÑÏπò Ï∂îÏ†Å ÏòµÏÖò
        const options = {
            enableHighAccuracy: true,
            maximumAge: 0,
            timeout: 15000
        };
        
        watchId = navigator.geolocation.watchPosition(
            function(position) {
                // ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏúÑÏπò Ï†ïÎ≥¥ Î∞õÏïòÏùÑ Îïå Ïã§Ìñâ
                const { latitude, longitude, accuracy } = position.coords;
                
                console.log(`ÏúÑÏπò ÏóÖÎç∞Ïù¥Ìä∏: ${latitude}, ${longitude}, Ï†ïÌôïÎèÑ: ${accuracy}m`);
                
                // ÏàòÎèôÏúºÎ°ú ÏúÑÏπòÎ•º ÏÑ§Ï†ïÌïú Í≤ΩÏö∞ Î¨¥Ïãú
                if (isLocationManuallySet) return;
                
                // Ï†ïÌôïÎèÑ Ï†ïÎ≥¥ ÌëúÏãú
                accuracyInfoDiv.textContent = `ÏúÑÏπò Ï†ïÌôïÎèÑ: ${Math.round(accuracy)}m`;
                
                // Ï†ïÌôïÎèÑÍ∞Ä ÎÑàÎ¨¥ ÎÇÆÏùÄ Í≤ΩÏö∞ ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ï Î≤ÑÌäº ÌëúÏãú
                if (accuracy > 100) {
                    statusElement.innerHTML = `ÏúÑÏπò Ï†ïÌôïÎèÑÍ∞Ä ÎÇÆÏäµÎãàÎã§(${Math.round(accuracy)}m). ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ïÏùÑ ÏÇ¨Ïö©Ìï¥Î≥¥ÏÑ∏Ïöî.`;
                    setLocationButton.style.display = 'block';
                } else {
                    if (!isLocationManuallySet) {
                        setLocationButton.style.display = 'none';
                    }
                }
                
                // ÏúÑÏπò ÎßàÏª§ ÏóÖÎç∞Ïù¥Ìä∏
                if (currentPositionMarker) {
                    currentPositionMarker.setLatLng([latitude, longitude]);
                } else {
                    currentPositionMarker = L.marker([latitude, longitude], { icon: currentPositionIcon }).addTo(map);
                }
                
                // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Ï§ëÏù¥Í≥† ÏßÄÎèÑÍ∞Ä ÏÇ¨Ïö©Ïûê Ï§ëÏã¨ÏúºÎ°ú ÏÑ§Ï†ïÎêú Í≤ΩÏö∞ÏóêÎßå ÏßÄÎèÑ Ï§ëÏã¨ Ïù¥Îèô
                if (isNavigating && isMapCenteredOnUser) {
                    map.panTo([latitude, longitude]);
                }
                
                // ÏõπÏÜåÏºìÏúºÎ°ú ÏúÑÏπò ÏóÖÎç∞Ïù¥Ìä∏ Ï†ÑÏÜ°
                if (socket && socket.readyState === WebSocket.OPEN && isNavigating) {
                    socket.send(JSON.stringify({
                        latitude: latitude,
                        longitude: longitude,
                        accuracy: accuracy,
                        session_id: sessionId
                    }));
                }
            },
            function(error) {
                console.error("ÏúÑÏπò Ï∂îÏ†Å Ïò§Î•ò:", error.code, error.message);
                
                let errorMsg = "";
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        errorMsg = "ÏúÑÏπò Í∂åÌïúÏù¥ Í±∞Î∂ÄÎêòÏóàÏäµÎãàÎã§. Î∏åÎùºÏö∞Ï†Ä ÏÑ§Ï†ïÏóêÏÑú ÏúÑÏπò Í∂åÌïúÏùÑ ÌóàÏö©Ìï¥Ï£ºÏÑ∏Ïöî.";
                        break;
                    case error.POSITION_UNAVAILABLE:
                        errorMsg = "ÏúÑÏπò Ï†ïÎ≥¥Î•º ÏÇ¨Ïö©Ìï† Ïàò ÏóÜÏäµÎãàÎã§. GPS Ïã†Ìò∏Í∞Ä ÏïΩÌïú ÏßÄÏó≠Ïùº Ïàò ÏûàÏäµÎãàÎã§.";
                        break;
                    case error.TIMEOUT:
                        errorMsg = "ÏúÑÏπò Ï†ïÎ≥¥ ÏöîÏ≤≠ ÏãúÍ∞ÑÏù¥ Ï¥àÍ≥ºÎêòÏóàÏäµÎãàÎã§.";
                        break;
                    default:
                        errorMsg = `ÏúÑÏπò Ï∂îÏ†Å Ïò§Î•ò: ${error.message}`;
                }
                
                statusElement.innerHTML = errorMsg;
                speakText(errorMsg);
                
                // Ïò§Î•ò Î∞úÏÉù Ïãú ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ï ÌôúÏÑ±Ìôî
                setLocationButton.style.display = 'block';
            },
            options
        );
    }

    // ÏúÑÏπò Ï∂îÏ†Å Ï§ëÏßÄ
    function stopTracking() {
        if (watchId) {
            navigator.geolocation.clearWatch(watchId);
            watchId = null;
            console.log("ÏúÑÏπò Ï∂îÏ†Å Ï§ëÏßÄÎê®");
        }
        
        // ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ï ÎπÑÌôúÏÑ±Ìôî
        isLocationManuallySet = false;
        setLocationButton.style.display = 'none';
    }

    // ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ï Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨
    setLocationButton.addEventListener('click', function() {
        speakText("ÏßÄÎèÑÎ•º ÌÅ¥Î¶≠ÌïòÏó¨ ÌòÑÏû¨ ÏúÑÏπòÎ•º ÏàòÎèôÏúºÎ°ú ÏÑ§Ï†ïÌïòÏÑ∏Ïöî.");
        isLocationManuallySet = true;
        this.textContent = "ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ï Î™®Îìú";
        this.style.backgroundColor = "#f44336";
        
        // ÏûÑÏãú ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨ ÏÉùÏÑ±
        const manualLocationHandler = function(e) {
            const lat = e.latlng.lat;
            const lng = e.latlng.lng;
            
            // ÌòÑÏû¨ ÏúÑÏπò ÎßàÏª§ ÏÑ§Ï†ï
            if (currentPositionMarker) {
                currentPositionMarker.setLatLng([lat, lng]);
            } else {
                currentPositionMarker = L.marker([lat, lng], { icon: currentPositionIcon }).addTo(map);
            }
            
            // ÏÑ§Ï†ïÎêú ÏúÑÏπò Ï†ïÎ≥¥Î•º ÏÑúÎ≤ÑÏóê Ï†ÑÏÜ°
            if (socket && socket.readyState === WebSocket.OPEN && isNavigating) {
                socket.send(JSON.stringify({
                    latitude: lat,
                    longitude: lng,
                    session_id: sessionId,
                    manually_set: true,
                    accuracy: 5  // ÏàòÎèô ÏÑ§Ï†ï ÏúÑÏπòÎäî Ï†ïÌôïÎèÑ ÎÜíÍ≤å ÏÑ§Ï†ï
                }));
            }
            
            // ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏
            statusElement.innerHTML = `ÌòÑÏû¨ ÏúÑÏπòÎ•º ÏàòÎèôÏúºÎ°ú ÏÑ§Ï†ïÌñàÏäµÎãàÎã§: ${lat.toFixed(6)}, ${lng.toFixed(6)}`;
            accuracyInfoDiv.textContent = "ÏúÑÏπò Ï†ïÌôïÎèÑ: ÏàòÎèô ÏÑ§Ï†ïÎê®";
            speakText("ÌòÑÏû¨ ÏúÑÏπòÎ•º ÏàòÎèôÏúºÎ°ú ÏÑ§Ï†ïÌñàÏäµÎãàÎã§.");
            
            // Î≤ÑÌäº ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏
            setLocationButton.textContent = "ÏûêÎèô ÏúÑÏπòÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞";
            setLocationButton.style.backgroundColor = "#4CAF50";
            
            // ÏàòÎèô ÏúÑÏπò ÏÑ§Ï†ï Î™®Îìú Ïú†ÏßÄ, ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï†úÍ±∞
            map.off('click', manualLocationHandler);
            
            // Î≤ÑÌäº ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨ Î≥ÄÍ≤Ω - ÏûêÎèô Î™®ÎìúÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
            setLocationButton.onclick = function() {
                isLocationManuallySet = false;
                setLocationButton.textContent = "ÌòÑÏû¨ ÏúÑÏπò ÏàòÎèô ÏÑ§Ï†ï";
                setLocationButton.style.backgroundColor = "#ff7043";
                setLocationButton.onclick = originalClickHandler;  // ÏõêÎûò Ìï∏Îì§Îü¨Î°ú Î≥µÏõê
                
                // ÏûêÎèô ÏúÑÏπò ÏóÖÎç∞Ïù¥Ìä∏ Îã§Ïãú ÏãúÏûë
                updateCurrentPosition();
                speakText("ÏûêÎèô ÏúÑÏπò Ï∂îÏ†ÅÏúºÎ°ú ÎèåÏïÑÍ∞ëÎãàÎã§.");
                
                if (!isNavigating) {
                    setLocationButton.style.display = 'none';
                }
            };
        };
        
        // ÏõêÎûò ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨ Ï†ÄÏû•
        const originalClickHandler = this.onclick;
        
        // ÏßÄÎèÑ ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï∂îÍ∞Ä
        map.on('click', manualLocationHandler);
    });

    // Î™©Ï†ÅÏßÄ ÏûÖÎ†• ÌïÑÎìúÏóê ÏóîÌÑ∞ÌÇ§ Ïù¥Î≤§Ìä∏ Ï∂îÍ∞Ä
    destinationInput.addEventListener('keypress', function(event) {
        if (event.key === 'Enter') {
            event.preventDefault();
            searchButton.click(); // Í≤ÄÏÉâ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ìä∏Î¶¨Í±∞
        }
    });

    // Î™©Ï†ÅÏßÄ Í≤ÄÏÉâ
    searchButton.addEventListener('click', async function() {
        const keyword = destinationInput.value.trim();
        if (!keyword) {
            speakText('Î™©Ï†ÅÏßÄÎ•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.');
            return;
        }
        
        try {
            console.log("Î™©Ï†ÅÏßÄ Í≤ÄÏÉâ ÏãúÏûë:", keyword);
            statusElement.innerHTML = 'Î™©Ï†ÅÏßÄ Í≤ÄÏÉâ Ï§ë...';
            speakText('Î™©Ï†ÅÏßÄÎ•º Í≤ÄÏÉâ Ï§ëÏûÖÎãàÎã§.');
            
            // Ï¢åÌëú ÌòïÏãùÏù∏ÏßÄ Î®ºÏ†Ä ÌôïÏù∏ ("ÏúÑÎèÑ,Í≤ΩÎèÑ" ÌòïÏãù)
            if (keyword.includes(',')) {
                const parts = keyword.split(',');
                if (parts.length === 2) {
                    const lat = parseFloat(parts[0].trim());
                    const lng = parseFloat(parts[1].trim());
                    
                    if (!isNaN(lat) && !isNaN(lng)) {
                        // Ïú†Ìö®Ìïú Ï¢åÌëúÏù¥Î©¥ Î∞îÎ°ú ÎßàÏª§ ÏÑ§Ï†ï
                        if (destinationMarker) {
                            destinationMarker.setLatLng([lat, lng]);
                        } else {
                            destinationMarker = L.marker([lat, lng], { icon: destinationIcon }).addTo(map);
                        }
                        
                        // ÏßÄÎèÑ Î∑∞ Ï°∞Ï†ï
                        if (currentPositionMarker) {
                            const bounds = L.latLngBounds([currentPositionMarker.getLatLng(), [lat, lng]]);
                            map.fitBounds(bounds, { padding: [50, 50] });
                        } else {
                            map.setView([lat, lng], 15);
                        }
                        
                        statusElement.innerHTML = 'Î™©Ï†ÅÏßÄÍ∞Ä ÏÑ§Ï†ïÎêòÏóàÏäµÎãàÎã§.';
                        speakText('Î™©Ï†ÅÏßÄÍ∞Ä ÏÑ§Ï†ïÎêòÏóàÏäµÎãàÎã§. Í∏∏ ÏïàÎÇ¥ ÏãúÏûë Î≤ÑÌäºÏùÑ ÎàåÎü¨Ï£ºÏÑ∏Ïöî.');
                        startNavigationButton.disabled = false;
                        
                        // Í≤ÄÏÉâ Í≤∞Í≥º Ïà®Í∏∞Í∏∞
                        if (searchResultsDiv) {
                            searchResultsDiv.style.display = 'none';
                        }
                        
                        return;
                    }
                }
            }
            
            // ÏúÑÏπò Í≤ÄÏÉâ API Ìò∏Ï∂ú - ÌòÑÏû¨ ÏúÑÏπò Í∏∞Î∞ò Í≤ÄÏÉâ Ï∂îÍ∞Ä
            let searchUrl = `/api/search?keyword=${encodeURIComponent(keyword)}`;
            
            // ÌòÑÏû¨ ÏúÑÏπòÍ∞Ä ÏûàÎäî Í≤ΩÏö∞ Ìï¥Îãπ ÏúÑÏπò Í∏∞Ï§ÄÏúºÎ°ú Í≤ÄÏÉâ
            if (currentPositionMarker) {
                const pos = currentPositionMarker.getLatLng();
                searchUrl += `&lat=${pos.lat}&lng=${pos.lng}&radius=5000`;
            }
            
            console.log(`Í≤ÄÏÉâ API Ìò∏Ï∂ú: ${searchUrl}`);
            const response = await fetch(searchUrl);
            console.log("Í≤ÄÏÉâ ÏùëÎãµ ÏÉÅÌÉú:", response.status);
            
            if (!response.ok) {
                throw new Error(`API ÏùëÎãµ Ïò§Î•ò: ${response.status}`);
            }
            
            const data = await response.json();
            console.log("Í≤ÄÏÉâ Í≤∞Í≥º:", data);
            
            if (data.error) {
                speakText(data.error);
                return;
            }
            
            if (!searchResultsDiv) {
                // Í≤ÄÏÉâ Í≤∞Í≥º ÌëúÏãú ÏòÅÏó≠Ïù¥ ÏóÜÏúºÎ©¥ ÏÉùÏÑ±
                searchResultsDiv = document.createElement('div');
                searchResultsDiv.id = 'search-results';
                searchResultsDiv.style.display = 'none';
                searchResultsDiv.style.maxHeight = '200px';
                searchResultsDiv.style.overflowY = 'auto';
                searchResultsDiv.style.marginBottom = '10px';
                searchResultsDiv.style.background = 'white';
                searchResultsDiv.style.border = '1px solid #ddd';
                searchResultsDiv.style.borderRadius = '5px';
                searchResultsDiv.style.marginTop = '5px';
                
                // Í≤ÄÏÉâ Í≤∞Í≥º ÏòÅÏó≠ ÏÇΩÏûÖ
                const formGroup = destinationInput.parentElement;
                formGroup.parentElement.insertBefore(searchResultsDiv, formGroup.nextSibling);
            }
            
            searchResultsDiv.innerHTML = '';
            
            if (data.places.length === 0) {
                searchResultsDiv.innerHTML = '<p style="padding: 10px; text-align: center;">Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.</p>';
                searchResultsDiv.style.display = 'block';
                speakText("Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§. Îã§Î•∏ ÌÇ§ÏõåÎìúÎ°ú Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.");
                return;
            }
            
            // Í≤ÄÏÉâ Í≤∞Í≥º ÌëúÏãú
            const resultsList = document.createElement('ul');
            resultsList.style.listStyle = 'none';
            resultsList.style.padding = '0';
            resultsList.style.margin = '0';
            
            // Í≤ÄÏÉâ Í≤∞Í≥º Î©òÌä∏
            speakText(`${keyword}Ïóê ÎåÄÌï¥ ${data.places.length}Í∞úÏùò Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏûàÏäµÎãàÎã§. ÏõêÌïòÎäî Ïû•ÏÜåÎ•º ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.`);
            
            data.places.forEach((place, index) => {
                const listItem = document.createElement('li');
                listItem.style.padding = '8px';
                listItem.style.borderBottom = '1px solid #eee';
                listItem.style.cursor = 'pointer';
                
                // ÌòÑÏû¨ ÏúÑÏπòÏóêÏÑúÏùò Í±∞Î¶¨ Í≥ÑÏÇ∞
                let distanceText = '';
                if (currentPositionMarker) {
                    const currentPos = currentPositionMarker.getLatLng();
                    const placePos = L.latLng(place.lat, place.lng);
                    const distance = Math.round(currentPos.distanceTo(placePos));
                    distanceText = `<span style="color:#4285F4; font-weight:bold; font-size:12px;">ÎÇ¥ ÏúÑÏπòÏóêÏÑú ${distance}m</span>`;
                }
                
                listItem.innerHTML = `
                    <strong>${place.name}</strong><br>
                    <small>${place.address}</small>
                    ${distanceText ? '<br>' + distanceText : ''}
                `;
                
                // Ìï≠Î™© ÌÅ¥Î¶≠ Ïãú Î™©Ï†ÅÏßÄÎ°ú ÏÑ§Ï†ï
                listItem.addEventListener('click', function() {
                    if (destinationMarker) {
                        destinationMarker.setLatLng([place.lat, place.lng]);
                    } else {
                        destinationMarker = L.marker([place.lat, place.lng], { icon: destinationIcon }).addTo(map);
                    }
                    
                    // ÏßÄÎèÑ Î∑∞ Ï°∞Ï†ï
                    if (currentPositionMarker) {
                        const bounds = L.latLngBounds([currentPositionMarker.getLatLng(), [place.lat, place.lng]]);
                        map.fitBounds(bounds, { padding: [50, 50] });
                    } else {
                        map.setView([place.lat, place.lng], 15);
                    }
                    
                    // Í≤ÄÏÉâ Í≤∞Í≥º Ïà®Í∏∞Í∏∞ Î∞è ÏÑ†ÌÉùÎêú Î™©Ï†ÅÏßÄ ÌëúÏãú
                    searchResultsDiv.style.display = 'none';
                    destinationInput.value = place.name;
                    
                    statusElement.innerHTML = `Î™©Ï†ÅÏßÄÍ∞Ä "${place.name}"ÏúºÎ°ú ÏÑ§Ï†ïÎêòÏóàÏäµÎãàÎã§.`;
                    speakText(`Î™©Ï†ÅÏßÄÍ∞Ä ${place.name}ÏúºÎ°ú ÏÑ§Ï†ïÎêòÏóàÏäµÎãàÎã§. Í∏∏ ÏïàÎÇ¥ ÏãúÏûë Î≤ÑÌäºÏùÑ ÎàåÎü¨Ï£ºÏÑ∏Ïöî.`);
                    
                    // Í∏∏ ÏïàÎÇ¥ Î≤ÑÌäº ÌôúÏÑ±Ìôî
                    startNavigationButton.disabled = false;
                });
                
                // Ìï≠Î™© ÏùΩÍ∏∞ Í∏∞Îä• Ï∂îÍ∞Ä (Ìï≠Î™© ÏúÑÏóê Ïò§Îûò ÎàÑÎ•¥Î©¥ ÏùåÏÑ±ÏúºÎ°ú ÏùΩÏñ¥Ï§å)
                listItem.addEventListener('contextmenu', function(e) {
                    e.preventDefault();
                    
                    let distanceInfo = '';
                    if (currentPositionMarker) {
                        const currentPos = currentPositionMarker.getLatLng();
                        const placePos = L.latLng(place.lat, place.lng);
                        const distance = Math.round(currentPos.distanceTo(placePos));
                        distanceInfo = `ÎÇ¥ ÏúÑÏπòÏóêÏÑú ${distance}ÎØ∏ÌÑ∞ Îñ®Ïñ¥Ï†∏ ÏûàÏäµÎãàÎã§.`;
                    }
                    
                    speakText(`${index + 1}Î≤àÏß∏ Í≤∞Í≥º: ${place.name}, ${place.address}. ${distanceInfo}`);
                });
                
                // Î™®Î∞îÏùº ÌÑ∞Ïπò Ïò§Îûò ÎàÑÎ•¥Í∏∞ ÏßÄÏõê
                let touchTimer;
                listItem.addEventListener('touchstart', function(e) {
                    touchTimer = setTimeout(() => {
                        let distanceInfo = '';
                        if (currentPositionMarker) {
                            const currentPos = currentPositionMarker.getLatLng();
                            const placePos = L.latLng(place.lat, place.lng);
                            const distance = Math.round(currentPos.distanceTo(placePos));
                            distanceInfo = `ÎÇ¥ ÏúÑÏπòÏóêÏÑú ${distance}ÎØ∏ÌÑ∞ Îñ®Ïñ¥Ï†∏ ÏûàÏäµÎãàÎã§.`;
                        }
                        
                        speakText(`${index + 1}Î≤àÏß∏ Í≤∞Í≥º: ${place.name}, ${place.address}. ${distanceInfo}`);
                    }, 800);
                });
                
                listItem.addEventListener('touchend', function() {
                    clearTimeout(touchTimer);
                });
                
                // Ìï≠Î™©Ïóê ÎßàÏö∞Ïä§ Ïò§Î≤Ñ Ìö®Í≥º
                listItem.addEventListener('mouseover', function() {
                    this.style.backgroundColor = '#f5f5f5';
                });
                
                listItem.addEventListener('mouseout', function() {
                    this.style.backgroundColor = '';
                });
                
                resultsList.appendChild(listItem);
            });
            
            searchResultsDiv.appendChild(resultsList);
            searchResultsDiv.style.display = 'block';
            
            statusElement.innerHTML = 'Í≤ÄÏÉâ ÏôÑÎ£å';
        } catch (error) {
            console.error('Í≤ÄÏÉâ Ïò§Î•ò:', error);
            statusElement.innerHTML = 'Í≤ÄÏÉâ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.';
            speakText('Í≤ÄÏÉâ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
        }
    });

    // Í∏∏ ÏïàÎÇ¥ ÏãúÏûë
    startNavigationButton.addEventListener('click', async function() {
        if (!currentPositionMarker) {
            speakText('ÌòÑÏû¨ ÏúÑÏπòÎ•º ÌôïÏù∏Ìï† Ïàò ÏóÜÏäµÎãàÎã§.');
            return;
        }
        
        if (!destinationMarker) {
            speakText('Î™©Ï†ÅÏßÄÎ•º Î®ºÏ†Ä ÏÑ§Ï†ïÌïòÏÑ∏Ïöî.');
            return;
        }
        
        try {
            statusElement.innerHTML = 'Í≤ΩÎ°úÎ•º Í≥ÑÏÇ∞ Ï§ëÏûÖÎãàÎã§...';
            speakText('Í≤ΩÎ°úÎ•º Í≥ÑÏÇ∞ Ï§ëÏûÖÎãàÎã§. Ïû†ÏãúÎßå Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî.');
            
            const currentPosition = currentPositionMarker.getLatLng();
            const destinationPosition = destinationMarker.getLatLng();
            
            console.log(`Í≤ΩÎ°ú Í≥ÑÏÇ∞: ${currentPosition.lat},${currentPosition.lng} -> ${destinationPosition.lat},${destinationPosition.lng}`);
            
            // Í≤ΩÎ°ú ÏöîÏ≤≠
            const response = await fetch('/api/get_route', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    start_lat: currentPosition.lat,
                    start_lng: currentPosition.lng,
                    end_lat: destinationPosition.lat,
                    end_lng: destinationPosition.lng
                })
            });
            
            if (!response.ok) {
                throw new Error(`Í≤ΩÎ°ú API ÏùëÎãµ Ïò§Î•ò: ${response.status}`);
            }
            
            const data = await response.json();
            console.log("Í≤ΩÎ°ú Í≥ÑÏÇ∞ Í≤∞Í≥º:", data);
            
            if (data.error) {
                speakText(data.error);
                return;
            }
            
            // ÏÑ∏ÏÖò ID Ï†ÄÏû•
            sessionId = data.session_id;
            
            // Í∏∞Ï°¥ Í≤ΩÎ°ú Î†àÏù¥Ïñ¥ Ï†úÍ±∞
            if (routeLayer) {
                map.removeLayer(routeLayer);
            }
            
            // ÏÉàÎ°úÏö¥ Í≤ΩÎ°ú Í∑∏Î¶¨Í∏∞
            routeCoordinates = data.coordinates;
            routeLayer = L.polyline(routeCoordinates, {
                color: 'blue',
                weight: 5,
                opacity: 0.7
            }).addTo(map);
            
            // ÏßÄÎèÑ Í≤ΩÍ≥Ñ Ï°∞Ï†ï
            map.fitBounds(routeLayer.getBounds(), { padding: [50, 50] });
            
            // ÏßÄÎèÑ Ï§ëÏã¨ÏùÑ ÏÇ¨Ïö©Ïûê ÏúÑÏπòÎ°ú ÏÑ§Ï†ï
            if (currentPositionMarker) {
                map.setView(currentPositionMarker.getLatLng(), 17);
                isMapCenteredOnUser = true;
            }
            
            // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò Ï†ïÎ≥¥ ÌëúÏãú
            distanceElement.textContent = `${data.total_distance}m`;
            timeElement.textContent = data.total_time;
            
            // Ï¥àÍ∏∞ ÏïàÎÇ¥ Î©îÏãúÏßÄ ÏÑ§Ï†ï
            let initialGuidance = `Î™©Ï†ÅÏßÄÍπåÏßÄ Ï¥ù ${data.total_distance}ÎØ∏ÌÑ∞, ÏòàÏÉÅ ÏÜåÏöî ÏãúÍ∞ÑÏùÄ ${data.total_time}ÏûÖÎãàÎã§. `;
            
            if (data.guidance && data.guidance.length > 0) {
                nextDirectionElement.textContent = data.guidance[0].description;
                initialGuidance += data.guidance[0].description;
            } else {
                nextDirectionElement.textContent = "ÏïàÎÇ¥ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.";
                initialGuidance += "ÏïàÎÇ¥ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§.";
            }
            
            // UI Ï†ÑÌôò
            destinationForm.style.display = 'none';
            navigationInfo.style.display = 'block';
            
            // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò ÏÉÅÌÉú ÏÑ§Ï†ï
            isNavigating = true;
            
            // Î™®Î∞îÏùº ÏµúÏ†ÅÌôî UI ÌëúÏãú
            if (document.getElementById('compass-container')) {
                document.getElementById('compass-container').style.display = 'flex';
            }
            
            // ÏúÑÏπò Ï∂îÏ†Å ÏãúÏûë
            startTracking();
            
            // ÏùåÏÑ± ÏºúÍ∏∞
            voiceEnabled = true;
            if (document.getElementById('toggle-voice')) {
                document.getElementById('toggle-voice').textContent = "ÏùåÏÑ± ÎÅÑÍ∏∞";
            }
            
            statusElement.innerHTML = 'Í∏∏ ÏïàÎÇ¥Î•º ÏãúÏûëÌï©ÎãàÎã§.';
            
            // Ï≤´ ÏßÄÏãú ÏùåÏÑ± ÏïàÎÇ¥
            speakText(initialGuidance);
            
            // ÎÇòÏπ®Î∞ò Ï¥àÍ∏∞Ìôî
            initializeCompass();
            
        } catch (error) {
            console.error('Í≤ΩÎ°ú Í≥ÑÏÇ∞ Ïò§Î•ò:', error);
            statusElement.innerHTML = 'Í≤ΩÎ°ú Í≥ÑÏÇ∞ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.';
            speakText('Í≤ΩÎ°ú Í≥ÑÏÇ∞ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.');
        }
    });

    // Í∏∏ ÏïàÎÇ¥ Ï¢ÖÎ£å
    stopNavigationButton.addEventListener('click', function() {
        // ÎÑ§ÎπÑÍ≤åÏù¥ÏÖò ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî
        isNavigating = false;
        
        // ÏùåÏÑ± Ï§ëÏßÄ
        if (window.speechSynthesis) {
            window.speechSynthesis.cancel();
        }
        
        // ÏúÑÏπò Ï∂îÏ†Å Ï§ëÏßÄ
        stopTracking();
        
        // UI Ï†ÑÌôò
        navigationInfo.style.display = 'none';
        destinationForm.style.display = 'block';
        
        // ÎÇòÏπ®Î∞ò Ïª®ÌÖåÏù¥ÎÑà Ïà®Í∏∞Í∏∞
        if (document.getElementById('compass-container')) {
            document.getElementById('compass-container').style.display = 'none';
        }
        
        // Ï†ïÌôïÎèÑ ÌëúÏãú UI Î∞è ÏàòÎèô ÏúÑÏπò Î≤ÑÌäº Ïà®Í∏∞Í∏∞
        accuracyInfoDiv.style.display = 'none';
        setLocationButton.style.display = 'none';
        
        statusElement.innerHTML = 'Í∏∏ ÏïàÎÇ¥Í∞Ä Ï¢ÖÎ£åÎêòÏóàÏäµÎãàÎã§.';
        speakText('Í∏∏ ÏïàÎÇ¥Í∞Ä Ï¢ÖÎ£åÎêòÏóàÏäµÎãàÎã§.');
    });
    
    // ÏùåÏÑ± ÏïàÎÇ¥ ÏºúÍ∏∞/ÎÅÑÍ∏∞ Í∏∞Îä•
    if (document.getElementById('toggle-voice')) {
        document.getElementById('toggle-voice').addEventListener('click', function() {
            voiceEnabled = !voiceEnabled;
            this.textContent = voiceEnabled ? "ÏùåÏÑ± ÎÅÑÍ∏∞" : "ÏùåÏÑ± ÏºúÍ∏∞";
            
            if (!voiceEnabled) {
                speechSynthesis.cancel();  // ÌòÑÏû¨ Ïû¨ÏÉù Ï§ëÏù∏ ÏùåÏÑ± Ï§ëÏßÄ
                speakText("ÏùåÏÑ± ÏïàÎÇ¥Î•º ÎÅïÎãàÎã§.");
            } else {
                // ÏùåÏÑ± Ïº§ Îïå ÌòÑÏû¨ ÏïàÎÇ¥ Îã§Ïãú ÏùΩÍ∏∞
                speakText("ÏùåÏÑ± ÏïàÎÇ¥Î•º Ïº≠ÎãàÎã§. " + nextDirectionElement.textContent);
            }
        });
    }

    // Ï¥àÍ∏∞Ìôî Ïãú ÏúÑÏπò Í∂åÌïú ÏöîÏ≤≠ Î∞è Ï∂îÏ†Å ÏãúÏûë
    (async function initializeApp() {
        try {
            // ÏúÑÏπò Í∂åÌïú ÏöîÏ≤≠
            await requestLocationPermission();
            console.log("ÏúÑÏπò Í∂åÌïú ÌöçÎìù ÏÑ±Í≥µ");
            
            // Ï¥àÍ∏∞ ÏúÑÏπò ÌôïÏù∏ Î∞è Ï∂îÏ†Å ÏãúÏûë
            await updateCurrentPosition();
            startTracking();
            
            // ÏõπÏÜåÏºì Ïó∞Í≤∞
            setupWebSocket();
            
            // Ïï± ÏãúÏûë ÏïàÎÇ¥
            speakText("ÏïàÎÖïÌïòÏÑ∏Ïöî. Í∏∏ ÏïàÎÇ¥ ÏÑúÎπÑÏä§Í∞Ä ÏãúÏûëÎêòÏóàÏäµÎãàÎã§. ÏùåÏÑ±ÏúºÎ°ú Î™©Ï†ÅÏßÄÎ•º ÏûÖÎ†•ÌïòÏãúÎ†§Î©¥ ÌôîÎ©¥ ÏÉÅÎã®Ïùò ÎßàÏù¥ÌÅ¨ Î≤ÑÌäºÏùÑ ÎàåÎü¨Ï£ºÏÑ∏Ïöî.");
        } catch (error) {
            console.error("Ïï± Ï¥àÍ∏∞Ìôî Ïã§Ìå®:", error);
            statusElement.innerHTML = "ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§. ÏúÑÏπò Í∂åÌïúÏùÑ ÌóàÏö©Ìï¥Ï£ºÏÑ∏Ïöî.";
            speakText("ÏúÑÏπò Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Îç∞ Ïã§Ìå®ÌñàÏäµÎãàÎã§. ÏúÑÏπò Í∂åÌïúÏùÑ ÌóàÏö©Ìï¥Ï£ºÏÑ∏Ïöî.");
        }
    })();
});